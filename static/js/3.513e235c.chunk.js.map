{"version":3,"sources":["components/Profile/PersonInfo/PersonInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/PersonInfo/PersonStatusWithHooks.js","components/Profile/PersonInfo/PersonDataForm.js","components/Profile/PersonInfo/PersonInfo.js","assets/images/rose.jpg","assets/images/heart.svg","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","PersonStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","style","type","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","onDoubleClick","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","btnSave","formErrorSave","name","createField","Input","job","jobDescription","Textarea","about","contacts","contacts__title","Object","keys","map","key","contacts__social","ProfileData","isOwner","activateEditMode","btnEdit","onClick","person__name","fullName","person__job","lookingForAJob","person__jobDescription","lookingForAJobDescription","person__about","aboutMe","contactTitle","contactValue","Contact","PersonInfo","savePhoto","saveProfile","Preloader","person","person__wrapper","photo","src","photos","large","userImage","alt","person__input","target","files","length","info","initialValues","formData","then","Post","wrapper","image","profileImage","post__text","message","post__likesWrapper","post__likes","likes","post__likesImg","heart","maxLength50","maxLengthCreator","AddNewPostReduxForm","Field","textarea","component","placeholder","validate","required","btn","MyPosts","React","memo","postsElements","posts","post","id","posts__title","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.513e235c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"PersonInfo_person__275YF\",\"person__wrapper\":\"PersonInfo_person__wrapper__HZz9p\",\"photo\":\"PersonInfo_photo__1porq\",\"status\":\"PersonInfo_status__2Laeu\",\"person__input\":\"PersonInfo_person__input__1nEZl\",\"info\":\"PersonInfo_info__2FGCV\",\"btnEdit\":\"PersonInfo_btnEdit__1tKrS\",\"person__name\":\"PersonInfo_person__name__2F9jI\",\"person__job\":\"PersonInfo_person__job__3eywY\",\"person__jobDescription\":\"PersonInfo_person__jobDescription__3MC1n\",\"person__about\":\"PersonInfo_person__about__3wE6D\",\"contacts__social\":\"PersonInfo_contacts__social__NAZ0U\",\"contacts\":\"PersonInfo_contacts__3RJ5V\",\"contacts__title\":\"PersonInfo_contacts__title__3tpFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3Any1\",\"posts__title\":\"MyPosts_posts__title__2BHmu\",\"textarea\":\"MyPosts_textarea__2hs4b\",\"btn\":\"MyPosts_btn__Rkzfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__3BFOt\",\"image\":\"Post_image__1z-yr\",\"post__text\":\"Post_post__text__3A9mN\",\"post__likesWrapper\":\"Post_post__likesWrapper__3dj2x\",\"post__likes\":\"Post_post__likes__yCJIA\",\"post__likesImg\":\"Post_post__likesImg__1qxHv\"};","import React, {useEffect, useState} from 'react'\r\nimport style from './PersonInfo.module.css'\r\n\r\nconst PersonStatusWithHooks = props => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() =>{\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className={style.status}>\r\n      {editMode\r\n        ? <input type=\"text\" onChange={onStatusChange} onBlur={deactivateEditMode} value={status} autoFocus/>\r\n        : <div>\r\n          <span>Status: </span>\r\n          <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\r\n        </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonStatusWithHooks","import React from 'react'\r\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls'\r\nimport {reduxForm} from 'redux-form'\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <button className={style.btnSave}>Save</button>\r\n      {error && <div className={style.formErrorSave}>{error}</div>}\r\n      <div className={style.name}>FullName: {createField(Input, 'fullName', 'Full name')}</div>\r\n      <div className={style.job}>\r\n        Looking for a job? {createField(Input, 'lookingForAJob', null, null, {type: 'checkbox'})}\r\n      </div>\r\n      <div className={style.jobDescription}>\r\n        Job description: {createField(Textarea, 'lookingForAJobDescription', 'Job description')}\r\n      </div>\r\n      <div className={style.about}>\r\n        About me: {createField(Textarea, 'aboutMe', 'About me')}\r\n      </div>\r\n      <div className={style.contacts}>\r\n        <h3 className={style.contacts__title}>Contacts:</h3>\r\n        <div>{Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <div className={style.contacts__social}>{key}: {createField(Input, 'contacts.' + key, key)}</div>\r\n          )\r\n        })}</div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n  form: 'edit-profile'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react'\r\nimport style from './PersonInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport PersonStatusWithHooks from './PersonStatusWithHooks';\r\nimport userImage from '../../../assets/images/user.png'\r\nimport ProfileDataForm from './PersonDataForm'\r\n\r\nconst PersonInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={style.person}>\r\n      <div className={style.person__wrapper}>\r\n        <img className={style.photo} src={profile.photos.large || userImage} alt=''/>\r\n        <div>\r\n          <PersonStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n          {isOwner && <input className={style.person__input} type=\"file\" onChange={onMainPhotoSelected}/>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={style.info}>\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n          : <ProfileData profile={profile} isOwner={isOwner} activateEditMode={() => {\r\n            setEditMode(true)\r\n          }}/>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, activateEditMode}) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <button className={style.btnEdit} onClick={activateEditMode}>Edit profile</button>}\r\n      <div className={style.person__name}><span>Name:</span> {profile.fullName}</div>\r\n      <div className={style.person__job}><span>Looking for a job?</span> {profile.lookingForAJob ? 'Yes' : 'No'}</div>\r\n      <div className={style.person__jobDescription}>\r\n        <span>Job description:</span> {profile.lookingForAJob ? profile.lookingForAJobDescription : 'No description'}\r\n      </div>\r\n      <div className={style.person__about}><span>About me:</span> {profile.aboutMe}</div>\r\n      <div className={style.contacts}>\r\n        <h3 className={style.contacts__title}>Contacts:</h3>\r\n        <div>{Object.keys(profile.contacts).map(key => {\r\n          return <Contact contactTitle={key} contactValue={profile.contacts[key]} key={key}/>\r\n        })}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return (\r\n    <div className={style.contacts__social}><span>{contactTitle}:</span> {contactValue}</div>\r\n  )\r\n}\r\n\r\nexport default PersonInfo","export default __webpack_public_path__ + \"static/media/rose.bb352a7f.jpg\";","export default __webpack_public_path__ + \"static/media/heart.fb824694.svg\";","import React from 'react'\r\nimport profileImage from '../../../../assets/images/rose.jpg'\r\nimport heart from '../../../../assets/images/heart.svg'\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <img className={style.image} src={profileImage} alt=\"\" />\r\n      <div>\r\n        <p className={style.post__text}>{props.message}</p>\r\n        <div className={style.post__likesWrapper}>\r\n          <span className={style.post__likes}>{props.likes}</span>\r\n          <img className={style.post__likesImg} src={heart} alt=\"\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport style from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field className={style.textarea} component={Textarea} name={\"newPostText\"} placeholder='Hello'\r\n             validate={[required, maxLength50]}/>\r\n      <button className={style.btn}>Add</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n  form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n  const postsElements = props.posts.map(post =>\r\n    <Post message={post.message} likes={post.likes} key={post.id}/>\r\n  )\r\n\r\n  const onAddPost = (value) => {\r\n    props.addPost(value.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={style.posts}>\r\n      <h3 className={style.posts__title}>My Posts</h3>\r\n      {postsElements}\r\n      <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default MyPosts","import {addPostActionCreator} from './../../../redux/profile-reducer'\r\nimport {connect} from 'react-redux'\r\nimport MyPosts from './MyPosts'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react'\r\nimport PersonInfo from './PersonInfo/PersonInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <>\r\n      <PersonInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}\r\n                  isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n      <MyPostsContainer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId // 11718\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n      this.refreshProfile()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n               updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.userId}\r\n               savePhoto={this.props.savePhoto}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}