{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/UserItem/UserItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","UserItem","props","className","style","userName","activeClassName","active","to","id","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","textarea","component","Textarea","placeholder","validate","required","btn","Dialogs","state","dialogsPage","usersElements","users","map","user","key","messagesElements","messages","newMessageText","dialogs","title","wrapper","value","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,QAAU,yBAAyB,SAAW,0BAA0B,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,0BAA0B,IAAM,uB,+FCSjSC,EANE,SAACC,GAChB,OACE,kBAAC,IAAD,CAASC,UAAWC,IAAMC,SAAUC,gBAAiBF,IAAMG,OAAQC,GAAE,mBAAcN,EAAMO,KAAOP,EAAMQ,OCG3FC,EANC,SAACT,GACf,OACE,uBAAGC,UAAWC,IAAMQ,SAAUV,EAAMU,U,iCCGlCC,EAAeC,YAAiB,KAYhCC,EAAsBC,YAAU,CACpCC,KAAM,wBADoBD,EAVL,SAACd,GACtB,OACE,0BAAMgB,SAAUhB,EAAMiB,cACpB,kBAACC,EAAA,EAAD,CAAOjB,UAAWC,IAAMiB,SAAUC,UAAWC,IAAUb,KAAM,iBAAkBc,YAAY,eACpFC,SAAU,CAACC,IAAUb,KAC5B,4BAAQV,UAAWC,IAAMuB,KAAzB,WAoCSC,EA3BC,SAAC1B,GACf,IAAM2B,EAAQ3B,EAAM4B,YACdC,EAAgBF,EAAMG,MAAMC,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAUxB,KAAMwB,EAAKxB,KAAMyB,IAAKD,EAAKzB,GAAIA,GAAIyB,EAAKzB,QAC1F2B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAArB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASuB,IAAKvB,EAAQH,GACvCA,GAAIG,EAAQH,QACrDoB,EAAMS,eAM7B,OACE,yBAAKnC,UAAWC,IAAMmC,SACpB,wBAAIpC,UAAWC,IAAMoC,OAArB,WACA,yBAAKrC,UAAWC,IAAMqC,SACpB,yBAAKtC,UAAWC,IAAM4B,OACnBD,GAEH,yBAAK5B,UAAWC,IAAMiC,UACnBD,EACD,kBAACrB,EAAD,CAAqBG,SAbP,SAACwB,GACrBxC,EAAMyC,YAAYD,EAAMJ,uB,uDC5BtBM,EAA6B,SAACf,GAClC,MAAO,CACLgB,OAAQhB,EAAMiB,KAAKD,SCeRE,sBACbC,aAfsB,SAACnB,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAACmB,GAC1B,MAAO,CACLN,YAAa,SAACL,GACZW,EAASC,YAAkBZ,UDND,SAACa,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAKnD,MAAM2C,OAET,kBAACM,EAAcE,KAAKnD,OAFI,kBAAC,IAAD,CAAUM,GAAG,eAHH,GACb8C,IAAMH,WAUtC,OAFuCH,YAAQJ,EAARI,CAAoCI,KCE9DL,CAGbnB","file":"static/js/4.1464433d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1rJA3\",\"title\":\"Dialogs_title__DeE85\",\"wrapper\":\"Dialogs_wrapper__11f1z\",\"userName\":\"Dialogs_userName__2WvZZ\",\"messages\":\"Dialogs_messages__291OT\",\"message\":\"Dialogs_message__mmQwU\",\"active\":\"Dialogs_active__1zCMQ\",\"textarea\":\"Dialogs_textarea__2Hhcb\",\"btn\":\"Dialogs_btn__fyn6W\"};","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <NavLink className={style.userName} activeClassName={style.active} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n  )\r\n}\r\n\r\nexport default UserItem","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <p className={style.message}>{props.message}</p>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport UserItem from './UserItem/UserItem'\r\nimport Message from './Message/Message'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field className={style.textarea} component={Textarea} name={\"newMessageText\"} placeholder=\"Your message\"\r\n             validate={[required, maxLength100]}/>\r\n      <button className={style.btn}>Add</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n  form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n  const state = props.dialogsPage\r\n  const usersElements = state.users.map(user => <UserItem name={user.name} key={user.id} id={user.id}/>,)\r\n  const messagesElements = state.messages.map(message => <Message message={message.message} key={message.id}\r\n                                                                  id={message.id}/>)\r\n  const newMessageText = state.newMessageText\r\n\r\n  const addNewMessage = (value) => {\r\n    props.sendMessage(value.newMessageText)\r\n  }\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <h2 className={style.title}>Dialogs</h2>\r\n      <div className={style.wrapper}>\r\n        <div className={style.users}>\r\n          {usersElements}\r\n        </div>\r\n        <div className={style.messages}>\r\n          {messagesElements}\r\n          <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport {addMessageCreator} from './../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport {compose} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(addMessageCreator(newMessageText))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}